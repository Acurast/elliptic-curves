name: p256

on:
  pull_request:
    paths:
      - "p256/**"
      - "Cargo.*"
  push:
    branches: "**"

defaults:
  run:
    working-directory: p256

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.57.0 # MSRV
          - stable
        target:
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features arithmetic
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features bits
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features ecdh
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features ecdsa-core
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features ecdsa
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features hash2curve
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features jwk
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features pem
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features pkcs8
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features serde
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features sha256
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features voprf
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features arithmetic,bits,ecdh,ecdsa,hash2curve,jwk,pem,pkcs8,serde,sha256,voprf

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # 32-bit Linux
          - target: i686-unknown-linux-gnu
            rust: 1.57.0 # MSRV
            deps: sudo apt update && sudo apt install gcc-multilib
          - target: i686-unknown-linux-gnu
            rust: stable
            deps: sudo apt update && sudo apt install gcc-multilib

          # 64-bit Linux
          - target: x86_64-unknown-linux-gnu
            rust: 1.57.0 # MSRV
          - target: x86_64-unknown-linux-gnu
            rust: stable

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - run: ${{ matrix.deps }}
      - run: cargo check --target ${{ matrix.target }} --all-features
      - run: cargo test --release --target ${{ matrix.target }} --no-default-features
      - run: cargo test --release --target ${{ matrix.target }}
      - run: cargo test --release --target ${{ matrix.target }} --all-features

  # cross:
  #   strategy:
  #     matrix:
  #       include:
  #         # ARM32
  #         - target: armv7-unknown-linux-gnueabihf
  #           rust: 1.57.0 # MSRV
  #         - target: armv7-unknown-linux-gnueabihf
  #           rust: stable

  #         # ARM64
  #         - target: aarch64-unknown-linux-gnu
  #           rust: 1.57.0 # MSRV
  #         - target: aarch64-unknown-linux-gnu
  #           rust: stable

  #         # PPC32
  #         - target: powerpc-unknown-linux-gnu
  #           rust: 1.57.0 # MSRV
  #         - target: powerpc-unknown-linux-gnu
  #           rust: stable

  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: ${{ matrix.deps }}
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: ${{ matrix.rust }}
  #         target: ${{ matrix.target }}
  #         override: true
  #     - run: cargo install cross
  #     - run: cross test --release --target ${{ matrix.target }} --all-features
